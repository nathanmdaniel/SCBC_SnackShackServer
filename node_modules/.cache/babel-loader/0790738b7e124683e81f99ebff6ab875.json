{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport AutocompleteNames from '../../Accounts/AutocompleteNames.js';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nvar TransactionAccountLookup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TransactionAccountLookup, _React$Component);\n\n  function TransactionAccountLookup(props) {\n    var _this;\n\n    _classCallCheck(this, TransactionAccountLookup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransactionAccountLookup).call(this, props));\n    _this.getNames = _this.getNames.bind(_assertThisInitialized(_this));\n    _this.lookupBalance = _this.lookupBalance.bind(_assertThisInitialized(_this));\n    _this.state = {\n      accountJson: null,\n      names: [],\n      dispBalance: 0,\n      transactionNum: _this.props.transactionNum\n    };\n    return _this;\n  }\n\n  _createClass(TransactionAccountLookup, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      console.log(\"should update\");\n\n      if (prevProps.transactionNum != this.props.transactionNum) {\n        console.log(\"!=\");\n        this.setState({\n          transactionNum: this.props.transactionNum\n        });\n      }\n    }\n  }, {\n    key: \"lookupBalance\",\n    value: function lookupBalance(matchName) {\n      var _this2 = this;\n\n      this.state.accountJson.forEach(function (info) {\n        if (info.Name === matchName) {\n          _this2.state.dispBalance = info.Balance;\n        }\n      });\n      this.forceUpdate();\n    }\n  }, {\n    key: \"getNames\",\n    value: function getNames() {\n      return this.state.names;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var url = 'http://localhost:3001/RecordsJson';\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (myJson) {\n        var ret = [];\n        myJson.forEach(function (info) {\n          ret.push(info.Name);\n        });\n\n        _this3.setState({\n          accountJson: myJson,\n          names: ret\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(Grid, {\n        container: true\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 8\n      }, React.createElement(AutocompleteNames, {\n        getNames: this.getNames,\n        lookupBalance: this.lookupBalance\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 4\n      }, React.createElement(Typography, {\n        align: \"right\",\n        variant: \"h5\"\n      }, \"$\", this.state.dispBalance.toFixed(2)))));\n    }\n  }]);\n\n  return TransactionAccountLookup;\n}(React.Component);\n\nexport default TransactionAccountLookup;","map":{"version":3,"sources":["C:\\cs_projects\\SCBC_SnackShackServer\\pages\\Register\\RegisterTransactionSide\\AccountLookup.js"],"names":["React","AutocompleteNames","Grid","Typography","TransactionAccountLookup","props","getNames","bind","lookupBalance","state","accountJson","names","dispBalance","transactionNum","prevProps","console","log","setState","matchName","forEach","info","Name","Balance","forceUpdate","url","fetch","then","response","json","myJson","ret","push","catch","error","toFixed","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;IAEMC,wB;;;;;AACF,oCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kGAAMA,KAAN;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,+BAArB;AACA,UAAKE,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,IADJ;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,WAAW,EAAE,CAHJ;AAITC,MAAAA,cAAc,EAAE,MAAKR,KAAL,CAAWQ;AAJlB,KAAb;AAJe;AAUlB;;;;uCAEkBC,S,EAAW;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,UAAIF,SAAS,CAACD,cAAV,IAA4B,KAAKR,KAAL,CAAWQ,cAA3C,EAA2D;AACvDE,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,aAAKC,QAAL,CAAc;AAACJ,UAAAA,cAAc,EAAE,KAAKR,KAAL,CAAWQ;AAA5B,SAAd;AACH;AACJ;;;kCAEaK,S,EAAW;AAAA;;AACrB,WAAKT,KAAL,CAAWC,WAAX,CAAuBS,OAAvB,CAA+B,UAAAC,IAAI,EAAG;AAClC,YAAGA,IAAI,CAACC,IAAL,KAAcH,SAAjB,EAA4B;AACxB,UAAA,MAAI,CAACT,KAAL,CAAWG,WAAX,GAAyBQ,IAAI,CAACE,OAA9B;AACH;AACJ,OAJD;AAKA,WAAKC,WAAL;AACH;;;+BAEU;AACP,aAAO,KAAKd,KAAL,CAAWE,KAAlB;AACH;;;wCACmB;AAAA;;AAChB,UAAIa,GAAG,GAAG,mCAAV;AACAC,MAAAA,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,QAAQ,EAAI;AACxB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAFD,EAGCF,IAHD,CAGM,UAAAG,MAAM,EAAI;AACZ,YAAIC,GAAG,GAAG,EAAV;AACAD,QAAAA,MAAM,CAACV,OAAP,CAAe,UAAAC,IAAI,EAAG;AAClBU,UAAAA,GAAG,CAACC,IAAJ,CAASX,IAAI,CAACC,IAAd;AACH,SAFD;;AAGA,QAAA,MAAI,CAACJ,QAAL,CAAc;AAACP,UAAAA,WAAW,EAAEmB,MAAd;AAAsBlB,UAAAA,KAAK,EAAEmB;AAA7B,SAAd;AACH,OATD,EAUCE,KAVD,CAUO,UAACC,KAAD,EAAW;AACdlB,QAAAA,OAAO,CAACkB,KAAR,CAAcA,KAAd;AACH,OAZD;AAaH;;;6BAEQ;AACL,aACI,iCACI,oBAAC,IAAD;AAAM,QAAA,SAAS;AAAf,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE;AAAf,SACI,oBAAC,iBAAD;AAAmB,QAAA,QAAQ,EAAE,KAAK3B,QAAlC;AAA4C,QAAA,aAAa,EAAE,KAAKE;AAAhE,QADJ,CADJ,EAII,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE;AAAf,SACI,oBAAC,UAAD;AACI,QAAA,KAAK,EAAC,OADV;AAEI,QAAA,OAAO,EAAC;AAFZ,cAIM,KAAKC,KAAL,CAAWG,WAAX,CAAuBsB,OAAvB,CAA+B,CAA/B,CAJN,CADJ,CAJJ,CADJ,CADJ;AAiBH;;;;EApEkClC,KAAK,CAACmC,S;;AAuE7C,eAAe/B,wBAAf","sourcesContent":["import React from 'react';\r\nimport AutocompleteNames from '../../Accounts/AutocompleteNames.js'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass TransactionAccountLookup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getNames = this.getNames.bind(this);\r\n        this.lookupBalance = this.lookupBalance.bind(this);\r\n        this.state = {\r\n            accountJson: null,\r\n            names: [],\r\n            dispBalance: 0,\r\n            transactionNum: this.props.transactionNum,\r\n        };   \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        console.log(\"should update\")\r\n        if (prevProps.transactionNum != this.props.transactionNum) {\r\n            console.log(\"!=\")\r\n            this.setState({transactionNum: this.props.transactionNum});\r\n        }\r\n    }\r\n\r\n    lookupBalance(matchName) {\r\n        this.state.accountJson.forEach(info =>{\r\n            if(info.Name === matchName) {\r\n                this.state.dispBalance = info.Balance;\r\n            }\r\n        })\r\n        this.forceUpdate();\r\n    }\r\n\r\n    getNames() {\r\n        return this.state.names;\r\n    }\r\n    componentDidMount() {\r\n        var url = 'http://localhost:3001/RecordsJson'\r\n        fetch(url).then(response => {\r\n            return response.json();\r\n        })\r\n        .then(myJson => {\r\n            var ret = [];\r\n            myJson.forEach(info =>{\r\n                ret.push(info.Name)\r\n            })\r\n            this.setState({accountJson: myJson, names: ret});\r\n        })\r\n        .catch((error) => {\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid container>\r\n                    <Grid item xs={8} >\r\n                        <AutocompleteNames getNames={this.getNames} lookupBalance={this.lookupBalance}/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography\r\n                            align='right'\r\n                            variant='h5'\r\n                        >\r\n                            ${this.state.dispBalance.toFixed(2)}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default TransactionAccountLookup;"]},"metadata":{},"sourceType":"module"}