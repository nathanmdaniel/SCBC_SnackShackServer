{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport XLSX from 'xlsx';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nvar SnackButtons = /*#__PURE__*/function (_React$Component) {\n  _inherits(SnackButtons, _React$Component);\n\n  var _super = _createSuper(SnackButtons);\n\n  function SnackButtons(props) {\n    var _this;\n\n    _classCallCheck(this, SnackButtons);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      buttArr: null\n    };\n    return _this;\n  }\n\n  _createClass(SnackButtons, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var arr = [];\n      var data = null; // var url = 'http://192.168.1.2:3001/SnacksJson'\n\n      var url = 'http://localhost:3001/SnacksJson';\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (myJson) {\n        data = myJson;\n        data.forEach(function (info) {\n          var thisButton = /*#__PURE__*/React.createElement(Button, {\n            style: {\n              backgroundColor: \"#ec407a\",\n              color: '#faebd7',\n              fontWeight: 'bold'\n            },\n            variant: \"contained\",\n            onClick: _this2.props.addChip.bind(_this2, info.Name, \"Snacks\", info.UnitPrice),\n            size: \"large\"\n          }, info.Name);\n          arr.push(thisButton);\n        });\n\n        _this2.setState({\n          buttArr: arr\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var disp = this.state.buttArr ? this.state.buttArr.map(function (button) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            padding: 5\n          }\n        }, \" \", button, \" \");\n      }) : /*#__PURE__*/React.createElement(\"div\", null);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          padding: 20\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true\n      }, disp));\n    }\n  }]);\n\n  return SnackButtons;\n}(React.Component);\n\nexport default SnackButtons;","map":{"version":3,"sources":["C:/cs_projects/SCBC_SS2020/SCBC_SnackShackServer/pages/Register/RegisterButtonSide/CategorizedButtons/SnackButtons.js"],"names":["React","XLSX","Button","Grid","SnackButtons","props","state","buttArr","arr","data","url","fetch","then","response","json","myJson","forEach","info","thisButton","backgroundColor","color","fontWeight","addChip","bind","Name","UnitPrice","push","setState","catch","error","console","disp","map","button","padding","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;IAIMC,Y;;;;;AAEL,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACR,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAFQ;AAKlB;;;;wCAEsB;AAAA;;AAChB,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,IAAI,GAAG,IAAX,CAFgB,CAGhB;;AACA,UAAIC,GAAG,GAAG,kCAAV;AACAC,MAAAA,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,QAAQ,EAAI;AACxB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAFD,EAGCF,IAHD,CAGM,UAAAG,MAAM,EAAI;AACZN,QAAAA,IAAI,GAAGM,MAAP;AACAN,QAAAA,IAAI,CAACO,OAAL,CAAa,UAAAC,IAAI,EAAG;AAChB,cAAIC,UAAU,gBAAG,oBAAC,MAAD;AACjB,YAAA,KAAK,EAAE;AAACC,cAAAA,eAAe,EAAE,SAAlB;AAA6BC,cAAAA,KAAK,EAAE,SAApC;AAA+CC,cAAAA,UAAU,EAAE;AAA3D,aADU;AAEjB,YAAA,OAAO,EAAC,WAFS;AAGjB,YAAA,OAAO,EAAE,MAAI,CAAChB,KAAL,CAAWiB,OAAX,CAAmBC,IAAnB,CAAwB,MAAxB,EAA8BN,IAAI,CAACO,IAAnC,EAAyC,QAAzC,EAAmDP,IAAI,CAACQ,SAAxD,CAHQ;AAIjB,YAAA,IAAI,EAAC;AAJY,aAIHR,IAAI,CAACO,IAJF,CAAjB;AAKRhB,UAAAA,GAAG,CAACkB,IAAJ,CAASR,UAAT;AACH,SAPO;;AAQJ,QAAA,MAAI,CAACS,QAAL,CAAc;AAACpB,UAAAA,OAAO,EAAEC;AAAV,SAAd;AACH,OAdG,EAeHoB,KAfG,CAeG,UAACC,KAAD,EAAW;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,OAjBG;AAkBH;;;6BAEQ;AACL,UAAIE,IAAI,GAAG,KAAKzB,KAAL,CAAWC,OAAX,GAAqB,KAAKD,KAAL,CAAWC,OAAX,CAAmByB,GAAnB,CAAuB,UAAAC,MAAM;AAAA,4BAAI;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX;AAAZ,gBAA6BD,MAA7B,MAAJ;AAAA,OAA7B,CAArB,gBAAqG,gCAAhH;AACJ,0BACI;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAAZ,sBACD,oBAAC,IAAD;AAAM,QAAA,SAAS;AAAf,SACGH,IADH,CADC,CADJ;AAOC;;;;EA3CsB/B,KAAK,CAACmC,S;;AA8CjC,eAAe/B,YAAf","sourcesContent":["import React from 'react';\r\nimport XLSX from 'xlsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n\r\nclass SnackButtons extends React.Component {\r\n\r\n\tconstructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                buttArr: null,\r\n            };\r\n\t}\r\n\r\n    componentDidMount() {\r\n        var arr = [];\r\n        var data = null;\r\n        // var url = 'http://192.168.1.2:3001/SnacksJson'\r\n        var url = 'http://localhost:3001/SnacksJson'\r\n        fetch(url).then(response => {\r\n            return response.json();\r\n        })\r\n        .then(myJson => {\r\n            data = myJson;\r\n            data.forEach(info =>{\r\n                var thisButton = <Button \r\n                style={{backgroundColor: \"#ec407a\", color: '#faebd7', fontWeight: 'bold'}} \r\n                variant='contained'\r\n                onClick={this.props.addChip.bind(this, info.Name, \"Snacks\", info.UnitPrice)}\r\n                size='large'>{info.Name}</Button>;\r\n        arr.push(thisButton);\r\n    })\r\n        this.setState({buttArr: arr});     \r\n    })\r\n    .catch((error) => {\r\n        console.error(error);\r\n    });\r\n    }\r\n\r\n    render() {\r\n        var disp = this.state.buttArr ? this.state.buttArr.map(button => <div style={{ padding: 5}}> {button} </div>) : <div/>;\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n       <Grid container>\r\n         {disp}\r\n       </Grid>\r\n     </div>\r\n\t\t);\r\n    }\r\n}\r\n\r\nexport default SnackButtons;"]},"metadata":{},"sourceType":"module"}