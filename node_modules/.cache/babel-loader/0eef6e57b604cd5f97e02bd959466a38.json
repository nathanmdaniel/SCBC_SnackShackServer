{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport ExistingAccountLookup from './ExistingAccountLookup.js';\nimport ExistingAccountDeposit from './ExistingAccountDeposit.js';\nimport AutocompleteNames from './AutocompleteNames.js';\n\nvar ExistingAccountInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ExistingAccountInput, _React$Component);\n\n  function ExistingAccountInput() {\n    var _this;\n\n    _classCallCheck(this, ExistingAccountInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExistingAccountInput).call(this));\n    _this.getNames = _this.getNames.bind(_assertThisInitialized(_this));\n    _this.lookupBalance = _this.lookupBalance.bind(_assertThisInitialized(_this));\n    _this.state = {\n      searchString: null,\n      accountJson: null,\n      names: [],\n      dispBalance: null\n    };\n    return _this;\n  }\n\n  _createClass(ExistingAccountInput, [{\n    key: \"lookupBalance\",\n    value: function lookupBalance(matchName) {\n      var _this2 = this;\n\n      this.state.accountJson.forEach(function (info) {\n        if (info.Name === matchName) _this2.state.dispBalance = info.Balance;\n      });\n      this.state.dispBalance = 0;\n    }\n  }, {\n    key: \"getNames\",\n    value: function getNames() {\n      console.log(this.state.names);\n      return this.state.names;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var url = 'http://localhost:3001/RecordsJson';\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (myJson) {\n        console.log(myJson);\n        var ret = [];\n        myJson.forEach(function (info) {\n          ret.push(info.Name);\n        });\n        console.log(ret);\n\n        _this3.setState({\n          accountJson: myJson,\n          names: ret\n        });\n\n        console.log(_this3.state.names);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\"\n      }, \"Existing Account Update\"), React.createElement(AutocompleteNames, {\n        getNames: this.getNames\n      }), React.createElement(ExistingAccountDeposit, null));\n    }\n  }]);\n\n  return ExistingAccountInput;\n}(React.Component);\n\nexport default ExistingAccountInput;","map":{"version":3,"sources":["C:\\cs_projects\\SCBC_SnackShackServer\\pages\\Accounts\\ExistingAccountInput.js"],"names":["React","Typography","ExistingAccountLookup","ExistingAccountDeposit","AutocompleteNames","ExistingAccountInput","getNames","bind","lookupBalance","state","searchString","accountJson","names","dispBalance","matchName","forEach","info","Name","Balance","console","log","url","fetch","then","response","json","myJson","ret","push","setState","catch","error","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;AACA,OAAOC,sBAAP,MAAmC,6BAAnC;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;;IAEMC,oB;;;;;AACF,kCAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,+BAArB;AACA,UAAKE,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,IADL;AAETC,MAAAA,WAAW,EAAE,IAFJ;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,WAAW,EAAE;AAJJ,KAAb;AAJU;AAUb;;;;kCAEaC,S,EAAW;AAAA;;AACrB,WAAKL,KAAL,CAAWE,WAAX,CAAuBI,OAAvB,CAA+B,UAAAC,IAAI,EAAG;AAClC,YAAGA,IAAI,CAACC,IAAL,KAAcH,SAAjB,EACI,MAAI,CAACL,KAAL,CAAWI,WAAX,GAAyBG,IAAI,CAACE,OAA9B;AACP,OAHD;AAIA,WAAKT,KAAL,CAAWI,WAAX,GAAyB,CAAzB;AACH;;;+BAEU;AACPM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWG,KAAvB;AACA,aAAO,KAAKH,KAAL,CAAWG,KAAlB;AACH;;;wCAEmB;AAAA;;AAChB,UAAIS,GAAG,GAAG,mCAAV;AACAC,MAAAA,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,QAAQ,EAAI;AACxB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAFD,EAGCF,IAHD,CAGM,UAAAG,MAAM,EAAI;AACZP,QAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACA,YAAIC,GAAG,GAAG,EAAV;AACAD,QAAAA,MAAM,CAACX,OAAP,CAAe,UAAAC,IAAI,EAAG;AAClBW,UAAAA,GAAG,CAACC,IAAJ,CAASZ,IAAI,CAACC,IAAd;AACH,SAFD;AAGAE,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;;AACA,QAAA,MAAI,CAACE,QAAL,CAAc;AAAClB,UAAAA,WAAW,EAAEe,MAAd;AAAsBd,UAAAA,KAAK,EAAEe;AAA7B,SAAd;;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACX,KAAL,CAAWG,KAAvB;AACH,OAZD,EAaCkB,KAbD,CAaO,UAACC,KAAD,EAAW;AACdZ,QAAAA,OAAO,CAACY,KAAR,CAAcA,KAAd;AACH,OAfD;AAgBH;;;6BAEQ;AACL,aACI,iCACL,oBAAC,UAAD;AAAY,QAAA,YAAY,MAAxB;AAAyB,QAAA,OAAO,EAAC,IAAjC;AAAsC,QAAA,SAAS,EAAC;AAAhD,mCADK,EAII,oBAAC,iBAAD;AAAmB,QAAA,QAAQ,EAAE,KAAKzB;AAAlC,QAJJ,EAKI,oBAAC,sBAAD,OALJ,CADJ;AASH;;;;EAxD8BN,KAAK,CAACgC,S;;AA2DzC,eAAe3B,oBAAf","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExistingAccountLookup from './ExistingAccountLookup.js';\r\nimport ExistingAccountDeposit from './ExistingAccountDeposit.js';\r\nimport AutocompleteNames from './AutocompleteNames.js';\r\n\r\nclass ExistingAccountInput extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.getNames = this.getNames.bind(this);\r\n        this.lookupBalance = this.lookupBalance.bind(this);\r\n        this.state = {\r\n            searchString: null,\r\n            accountJson: null,\r\n            names: [],\r\n            dispBalance: null,\r\n        };   \r\n    }\r\n\r\n    lookupBalance(matchName) {\r\n        this.state.accountJson.forEach(info =>{\r\n            if(info.Name === matchName)\r\n                this.state.dispBalance = info.Balance;\r\n        })\r\n        this.state.dispBalance = 0;\r\n    }\r\n\r\n    getNames() {\r\n        console.log(this.state.names);\r\n        return this.state.names;\r\n    }\r\n\r\n    componentDidMount() {\r\n        var url = 'http://localhost:3001/RecordsJson'\r\n        fetch(url).then(response => {\r\n            return response.json();\r\n        })\r\n        .then(myJson => {\r\n            console.log(myJson);\r\n            var ret = [];\r\n            myJson.forEach(info =>{\r\n                ret.push(info.Name)\r\n            })\r\n            console.log(ret);\r\n            this.setState({accountJson: myJson, names: ret});\r\n            console.log(this.state.names);\r\n        })\r\n        .catch((error) => {\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n\t\t\t    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n\t\t\t\t    Existing Account Update\r\n\t\t\t    </Typography>\r\n                <AutocompleteNames getNames={this.getNames}/>\r\n                <ExistingAccountDeposit/>\r\n            </div>\r\n\t\t);\r\n    }\r\n}\r\n\r\nexport default ExistingAccountInput;"]},"metadata":{},"sourceType":"module"}