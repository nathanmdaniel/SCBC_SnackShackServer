{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from './RegisterButtonSide/Tabs.js';\nimport TransactionCard from './RegisterTransactionSide/TransactionCard.js';\nimport RegisterButtonContainer from './RegisterButtonSide/RegisterButtonContainer.js';\nimport CheckoutChip from './RegisterTransactionSide/CheckoutChip.js';\nimport Chip from '@material-ui/core/Chip';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      margin: \"10px\"\n    }\n  };\n};\n\nfunction genChipLabel(itemName, price) {\n  return itemName + \"  $\" + price.toFixed(2);\n}\n\nvar Register = /*#__PURE__*/function (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  var _super = _createSuper(Register);\n\n  function Register() {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      chips: [],\n      prices: [],\n      items: [],\n      total: 0,\n      transactionNum: 0,\n      activeChipIndex: 0\n    });\n\n    _this.handleButtonClick = _this.handleButtonClick.bind(_assertThisInitialized(_this));\n    _this.handleRemoveClick = _this.handleRemoveClick.bind(_assertThisInitialized(_this));\n    _this.handleSendClick = _this.handleSendClick.bind(_assertThisInitialized(_this));\n    _this.handleChipClick = _this.handleChipClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"handleChipClick\",\n    value: function handleChipClick(chip) {\n      for (var i = 0; i < this.state.chips.length; ++i) {\n        if (this.state.chips[i].props.label == chip.props.label) {\n          this.setState({\n            activeChipIndex: i\n          });\n          return;\n        }\n      }\n    }\n  }, {\n    key: \"handleButtonClick\",\n    value: function handleButtonClick(itemName, sourceSheet, price) {\n      this.state.chips.push( /*#__PURE__*/React.createElement(CheckoutChip, {\n        label: genChipLabel(itemName, price),\n        handleChipClick: this.handleChipClick\n      }));\n      this.state.items.push({\n        sheet: sourceSheet,\n        item: itemName\n      });\n      this.state.prices.push(price);\n      this.state.total = this.state.total + price;\n      this.setState({\n        activeChipIndex: this.state.chips.length - 1\n      });\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleRemoveClick\",\n    value: function handleRemoveClick() {\n      this.state.chips.splice(this.state.activeChipIndex, 1);\n      this.state.items.splice(this.state.activeChipIndex, 1);\n      this.state.total -= this.state.prices.splice(this.state.activeChipIndex, 1);\n      this.setState({\n        activeChipIndex: this.state.chips.length - 1\n      });\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleSendClick\",\n    value: function handleSendClick(customerName) {\n      var cost = this.state.total; // fetch('http://192.168.1.2:3001/DecInventories', {\n\n      fetch('http://localhost:3001/DecInventories', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          name: customerName,\n          price: this.state.total,\n          items: this.state.items\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (myJson) {\n        console.log(myJson.found);\n        var outputString = \"\";\n\n        if (myJson.found) {\n          outputString = \"Successfully charged \\\"\" + customerName + \"\\\" $\" + cost + \"\\n\";\n        }\n\n        document.getElementById(\"server-output\").value += outputString;\n      }).catch(function (error) {\n        console.log(error);\n      }); //request({\n      //    url: url,\n      //    method: \"POST\",\n      //    json: true,   // <--Very important!!!\n      //    body: myJSONObject\n      //}, function (error, response, body){\n      //    console.log(response);\n      //});\n\n      this.state.chips = [];\n      this.state.prices = [];\n      this.state.items = [];\n      this.state.total = 0;\n      this.state.transactionNum++;\n      this.forceUpdate();\n    } // <textarea id=\"server-output\" readOnly style={{width:'100%'}}/>\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.root\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 0\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8\n      }, /*#__PURE__*/React.createElement(RegisterButtonContainer, {\n        addChip: this.handleButtonClick\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4\n      }, /*#__PURE__*/React.createElement(TransactionCard, {\n        chips: this.state.chips,\n        removeClick: this.handleRemoveClick,\n        sendClick: this.handleSendClick,\n        transactionTotal: this.state.total,\n        transactionNum: this.state.transactionNum,\n        style: {\n          padding: \"10px\"\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"server-output\",\n        multiline: true,\n        rows: 4,\n        defaultValue: \"Default Value\",\n        variant: \"outlined\"\n      }))));\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nRegister.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Register);","map":{"version":3,"sources":["C:/cs_projects/SCBC_SS2020/SCBC_SnackShackServer/pages/Register/Register.js"],"names":["React","PropTypes","withStyles","Paper","Card","Grid","Tabs","TransactionCard","RegisterButtonContainer","CheckoutChip","Chip","styles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","margin","genChipLabel","itemName","price","toFixed","Register","chips","prices","items","total","transactionNum","activeChipIndex","handleButtonClick","bind","handleRemoveClick","handleSendClick","handleChipClick","chip","i","state","length","props","label","setState","sourceSheet","push","sheet","item","forceUpdate","splice","customerName","cost","fetch","method","headers","body","name","then","response","json","myJson","console","log","found","outputString","document","getElementById","value","catch","error","classes","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tabs from './RegisterButtonSide/Tabs.js';\r\nimport TransactionCard from './RegisterTransactionSide/TransactionCard.js'\r\nimport RegisterButtonContainer from './RegisterButtonSide/RegisterButtonContainer.js';\r\nimport CheckoutChip from './RegisterTransactionSide/CheckoutChip.js';\r\n\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: \"10px\",\r\n    },\r\n});\r\n\r\nfunction genChipLabel(itemName, price) {\r\n    return itemName + \"  $\" + price.toFixed(2);\r\n}\r\n\r\n\r\nclass Register extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n        this.handleRemoveClick = this.handleRemoveClick.bind(this);\r\n        this.handleSendClick = this.handleSendClick.bind(this);\r\n        this.handleChipClick = this.handleChipClick.bind(this);\r\n    }\r\n\r\n    state = {\r\n        chips: [],\r\n        prices: [],\r\n        items: [],\r\n        total: 0,\r\n        transactionNum: 0,\r\n        activeChipIndex: 0\r\n    };\r\n\r\n    handleChipClick(chip) {\r\n        for (var i = 0; i < this.state.chips.length; ++i) {\r\n            if(this.state.chips[i].props.label == chip.props.label) {\r\n                this.setState({activeChipIndex: i});\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    handleButtonClick(itemName, sourceSheet, price) {\r\n        this.state.chips.push(\r\n        <CheckoutChip\r\n            label={genChipLabel(itemName, price)}\r\n            handleChipClick={this.handleChipClick}\r\n        />);\r\n        this.state.items.push({sheet: sourceSheet, item: itemName});\r\n        this.state.prices.push(price);\r\n        this.state.total = this.state.total + price;\r\n        this.setState({activeChipIndex: this.state.chips.length - 1});\r\n        this.forceUpdate();\r\n    }\r\n\r\n    handleRemoveClick() {\r\n        this.state.chips.splice(this.state.activeChipIndex, 1);\r\n        this.state.items.splice(this.state.activeChipIndex, 1);\r\n        this.state.total -= this.state.prices.splice(this.state.activeChipIndex, 1);\r\n        this.setState({activeChipIndex: this.state.chips.length - 1});\r\n        this.forceUpdate();\r\n    }\r\n\r\n    handleSendClick(customerName) {\r\n        const cost = this.state.total;\r\n        // fetch('http://192.168.1.2:3001/DecInventories', {\r\n            fetch('http://localhost:3001/DecInventories', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: customerName,\r\n                price: this.state.total,\r\n                items: this.state.items\r\n            })\r\n        }).then(response => {\r\n            return response.json();\r\n        })\r\n        .then(myJson => {\r\n            console.log(myJson.found)\r\n            var outputString = \"\"\r\n            if (myJson.found) {\r\n                outputString = \"Successfully charged \\\"\" + customerName + \"\\\" $\" + cost + \"\\n\";\r\n            }\r\n            document.getElementById(\"server-output\").value += outputString;\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n        //request({\r\n        //    url: url,\r\n        //    method: \"POST\",\r\n        //    json: true,   // <--Very important!!!\r\n        //    body: myJSONObject\r\n        //}, function (error, response, body){\r\n        //    console.log(response);\r\n        //});\r\n\r\n        this.state.chips = [];\r\n        this.state.prices = [];\r\n        this.state.items = [];\r\n        this.state.total = 0;\r\n        this.state.transactionNum++;\r\n        this.forceUpdate();\r\n    }\r\n// <textarea id=\"server-output\" readOnly style={{width:'100%'}}/>\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n          <div className={classes.root}>\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={12} sm={8}>\r\n                    <RegisterButtonContainer addChip={this.handleButtonClick}/>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TransactionCard \r\n                  chips={this.state.chips} \r\n                  removeClick={this.handleRemoveClick}\r\n                  sendClick={this.handleSendClick}\r\n                  transactionTotal={this.state.total}\r\n                  transactionNum={this.state.transactionNum}\r\n                  style={{padding: \"10px\"}}\r\n                  > \r\n                </TransactionCard>\r\n              </Grid>\r\n                <Grid item xs={12} sm={8}>\r\n                    <TextField\r\n                        id=\"server-output\"\r\n                        multiline\r\n                        rows={4}\r\n                        defaultValue=\"Default Value\"\r\n                        variant=\"outlined\"\r\n                        />\r\n                </Grid>\r\n            </Grid>\r\n          </div>\r\n        );\r\n            }\r\n}\r\n\r\n  Register.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Register);"]},"metadata":{},"sourceType":"module"}