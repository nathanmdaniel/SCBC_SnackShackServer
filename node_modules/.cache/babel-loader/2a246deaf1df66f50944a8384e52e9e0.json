{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport AccountLookup from './AccountLookup.js';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      textAlign: 'left',\n      color: theme.palette.text.secondary,\n      margin: \"10px\"\n    }\n  };\n};\n\nfunction handleClick() {\n  console.log(\"chip clicked\");\n}\n\nfunction generateTotal(total) {\n  return \"$\" + total;\n}\n\nvar TransactionCard = /*#__PURE__*/function (_React$Component) {\n  _inherits(TransactionCard, _React$Component);\n\n  var _super = _createSuper(TransactionCard);\n\n  function TransactionCard(props) {\n    var _this;\n\n    _classCallCheck(this, TransactionCard);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      camperName: \"placeholder\"\n    });\n\n    _this.setCamperName = _this.setCamperName.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TransactionCard, [{\n    key: \"setCamperName\",\n    value: function setCamperName(name) {\n      this.setState({\n        camperName: name\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return /*#__PURE__*/React.createElement(Card, {\n        className: classes.paper\n      }, /*#__PURE__*/React.createElement(CardMedia, {\n        style: {\n          height: 120\n        },\n        image: require(\"../../../static/Alligator_Flipped.jpg\"),\n        component: \"img\",\n        title: \"Contemplative Reptile\"\n      }), /*#__PURE__*/React.createElement(CardContent, null, /*#__PURE__*/React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\"\n      }, \"Transaction\"), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          minHeight: '250px'\n        }\n      }, this.props.chips), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4\n      }, /*#__PURE__*/React.createElement(Button, {\n        fullWidth: true,\n        onClick: this.props.removeClick,\n        style: {\n          backgroundColor: '#ef9a9a',\n          color: '#d50000'\n        }\n      }, /*#__PURE__*/React.createElement(SvgIcon, null, /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z\"\n      })))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4\n      }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4\n      }, /*#__PURE__*/React.createElement(Typography, {\n        align: \"right\",\n        style: {\n          color: '#b71c1c'\n        },\n        variant: \"h5\"\n      }, generateTotal(this.props.transactionTotal.toFixed(2)))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12\n      }, /*#__PURE__*/React.createElement(AccountLookup, {\n        setCamperName: this.setCamperName,\n        transactionNum: this.props.transactionNum\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12\n      }, /*#__PURE__*/React.createElement(Button, {\n        fullWidth: true,\n        onClick: this.props.sendClick.bind(this, this.state.camperName),\n        style: {\n          backgroundColor: '#c5e1a5',\n          color: '#558b2f'\n        }\n      }, /*#__PURE__*/React.createElement(SvgIcon, null, /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M2,21L23,12L2,3V10L17,12L2,14V21Z\"\n      })))))));\n    }\n  }]);\n\n  return TransactionCard;\n}(React.Component);\n\nTransactionCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TransactionCard);","map":{"version":3,"sources":["C:/cs_projects/SCBC_SS2020/SCBC_SnackShackServer/pages/Register/RegisterTransactionSide/TransactionCard.js"],"names":["React","PropTypes","withStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","IconButton","Button","Chip","SvgIcon","Typography","Paper","Grid","AccountLookup","styles","theme","root","flexGrow","paper","textAlign","color","palette","text","secondary","margin","handleClick","console","log","generateTotal","total","TransactionCard","props","camperName","setCamperName","bind","name","setState","classes","height","require","minHeight","chips","removeClick","backgroundColor","transactionTotal","toFixed","transactionNum","sendClick","state","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AccountLookup from './AccountLookup.js';\r\n\r\n\r\nconst styles = theme => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tpaper: {\r\n\t\ttextAlign: 'left',\r\n\t\tcolor: theme.palette.text.secondary,\r\n\t\tmargin: \"10px\",\r\n\t},\r\n});\r\n\r\nfunction handleClick() {\r\n\tconsole.log(\"chip clicked\");\r\n}\r\n\r\nfunction generateTotal(total) {\r\n    return \"$\" + total;\r\n}\r\n\r\nclass TransactionCard extends React.Component {\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\t    this.setCamperName = this.setCamperName.bind(this);\r\n\t}\r\n\r\n    state = {\r\n        camperName: \"placeholder\",\r\n    };\r\n\r\n    setCamperName(name) {\r\n        this.setState( {camperName: name} );\r\n    }\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn (\r\n\t\t\t<Card className={classes.paper}>\r\n\t\t\t<CardMedia style={{ height: 120}}\r\n\t\t\timage={require(\"../../../static/Alligator_Flipped.jpg\")}\r\n\t\t\t\tcomponent=\"img\"\r\n\t\t\t  title=\"Contemplative Reptile\"\r\n\t\t\t/>\r\n\t\t\t<CardContent>\r\n\t\t\t  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n\t\t\t\tTransaction\r\n\t\t\t  </Typography>\r\n\t\t\t  <Grid container spacing={2}>\r\n\t\t\t\t<Grid item xs={12} style={{minHeight: '250px'}}>\r\n\t\t\t\t\t{this.props.chips}\r\n    \t\t\t</Grid>\r\n    \t\t\t<Grid item xs={4}> \r\n        \t\t\t<Button fullWidth onClick={this.props.removeClick} style={{backgroundColor:'#ef9a9a', color: '#d50000'}}>\r\n\t\t\t\t\t\t<SvgIcon>\r\n\t\t\t\t\t\t\t<path d=\"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z\" />\r\n\t\t\t\t\t\t</SvgIcon>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={4}> </Grid>\r\n\t\t\t\t<Grid item xs={4}>  \r\n                    <Typography\r\n\t\t\t\t        align='right'\r\n\t\t\t\t        style={{color: '#b71c1c'}}\r\n                        variant='h5'\r\n                    >\r\n                        {generateTotal(this.props.transactionTotal.toFixed(2))}\r\n                    </Typography>\r\n                </Grid>\r\n\t\t\t\t<Grid item xs={12}> \r\n                    <AccountLookup setCamperName={this.setCamperName} transactionNum={this.props.transactionNum}/>\r\n                </Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Button fullWidth onClick={this.props.sendClick.bind(this, this.state.camperName)} style={{backgroundColor:'#c5e1a5', color: '#558b2f'}}>\r\n\t\t\t\t\t\t<SvgIcon>\r\n\t\t\t\t\t\t\t<path d=\"M2,21L23,12L2,3V10L17,12L2,14V21Z\" />\r\n\t\t\t\t\t\t</SvgIcon>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t  </Grid>\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t\t);\r\n\t}\r\n  }\r\n\r\nTransactionCard.propTypes = {\r\nclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TransactionCard);\r\n\r\n"]},"metadata":{},"sourceType":"module"}