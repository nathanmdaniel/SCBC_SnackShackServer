{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport XLSX from 'xlsx';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nvar ClothingButtons =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ClothingButtons, _React$Component);\n\n  function ClothingButtons(props) {\n    var _this;\n\n    _classCallCheck(this, ClothingButtons);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClothingButtons).call(this, props));\n    _this.genButtons = _this.genButtons.bind(_assertThisInitialized(_this));\n    _this.state = {\n      buttArr: _this.genButtons()\n    };\n    return _this;\n  }\n\n  _createClass(ClothingButtons, [{\n    key: \"genButtons\",\n    value: function () {\n      var _genButtons = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var XLSX, arr, data, url;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                XLSX = require('xlsx'); //var path = require('./SampleInventory.xlsx');\n                //console.log(path);\n                //var workbook = XLSX.readFile('./SampleInventory.xlsx');\n                //console.log(workbook);\n\n                arr = [];\n                data = null;\n                url = 'http://localhost:3001/json';\n                fetch(url).then(function (response) {\n                  return response.json();\n                }).then(function (myJson) {\n                  data = myJson;\n                  data.forEach(function (info) {\n                    console.log(this);\n                    console.log(info);\n                    var thisButton = React.createElement(Button, {\n                      style: {\n                        backgroundColor: \"#8d6e63\",\n                        color: '#faebd7',\n                        fontWeight: 'bold'\n                      },\n                      variant: \"contained\",\n                      size: \"large\"\n                    }, info.Name);\n                    arr.push(thisButton);\n                  });\n                });\n                console.log(arr);\n                _context.next = 8;\n                return arr;\n\n              case 8:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function genButtons() {\n        return _genButtons.apply(this, arguments);\n      }\n\n      return genButtons;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.buttArr);\n      var disp = this.state.buttArr.map(function (button) {\n        return React.createElement(\"div\", {\n          style: {\n            padding: 5\n          }\n        }, \" \", button, \" \");\n      });\n      console.log(disp);\n      return React.createElement(\"div\", {\n        style: {\n          padding: 20\n        }\n      }, React.createElement(Grid, {\n        container: true\n      }, React.createElement(\"div\", {\n        style: {\n          padding: 5\n        }\n      }, disp)));\n    }\n  }]);\n\n  return ClothingButtons;\n}(React.Component);\n\nexport default ClothingButtons;","map":{"version":3,"sources":["C:\\cs_projects\\SCBC_SnackShackServer\\pages\\Register\\RegisterButtonSide\\CategorizedButtons\\ClothingButtons.js"],"names":["React","XLSX","Grid","Button","ClothingButtons","props","genButtons","bind","state","buttArr","require","arr","data","url","fetch","then","response","json","myJson","forEach","info","console","log","thisButton","backgroundColor","color","fontWeight","Name","push","disp","map","button","padding","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;IAKMC,e;;;;;AAGF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,MAAKH,UAAL;AADA,KAAb;AAHe;AAMrB;;;;;;;;;;;;;AAGML,gBAAAA,I,GAAOS,OAAO,CAAC,MAAD,C,EACpB;AACA;AACA;AACA;;AACIC,gBAAAA,G,GAAM,E;AACNC,gBAAAA,I,GAAO,I;AACPC,gBAAAA,G,GAAM,4B;AACVC,gBAAAA,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAASC,QAAT,EAAmB;AAC/B,yBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,iBAFD,EAGOF,IAHP,CAGY,UAASG,MAAT,EAAiB;AACnBN,kBAAAA,IAAI,GAAGM,MAAP;AACAN,kBAAAA,IAAI,CAACO,OAAL,CAAa,UAAUC,IAAV,EAAe;AACxBC,oBAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAD,oBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,wBAAIG,UAAU,GAAG,oBAAC,MAAD;AAAQ,sBAAA,KAAK,EAAE;AAACC,wBAAAA,eAAe,EAAC,SAAjB;AAA4BC,wBAAAA,KAAK,EAAE,SAAnC;AAA8CC,wBAAAA,UAAU,EAAE;AAA1D,uBAAf;AAAkF,sBAAA,OAAO,EAAC,WAA1F;AAAsG,sBAAA,IAAI,EAAC;AAA3G,uBAAoHN,IAAI,CAACO,IAAzH,CAAjB;AACAhB,oBAAAA,GAAG,CAACiB,IAAJ,CAASL,UAAT;AACP,mBALG;AAOX,iBAZC;AAaDF,gBAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;;uBACcA,G;;;;;;;;;;;;;;;;;;;;;6BAGJ;AACLU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,OAAvB;AACA,UAAIoB,IAAI,GAAG,KAAKrB,KAAL,CAAWC,OAAX,CAAmBqB,GAAnB,CAAuB,UAAAC,MAAM;AAAA,eAAI;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX;AAAZ,gBAA6BD,MAA7B,MAAJ;AAAA,OAA7B,CAAX;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACA,aACU;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,OAAO,EAAE;AAAX;AAAZ,SACV,oBAAC,IAAD;AAAM,QAAA,SAAS;AAAf,SACS;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,OAAO,EAAE;AAAX;AAAZ,SACTH,IADS,CADT,CADU,CADV;AASJ;;;;EAlD4B7B,KAAK,CAACiC,S;;AAqDpC,eAAe7B,eAAf","sourcesContent":["import React from 'react';\r\nimport XLSX from 'xlsx';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\n\r\nclass ClothingButtons extends React.Component {\r\n\t\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.genButtons = this.genButtons.bind(this);\r\n        this.state = {\r\n            buttArr: this.genButtons(),\r\n\t\t};\r\n\t}\r\n\r\n    async genButtons() {\r\n\t\tconst XLSX = require('xlsx');\r\n\t\t//var path = require('./SampleInventory.xlsx');\r\n\t\t//console.log(path);\r\n\t\t//var workbook = XLSX.readFile('./SampleInventory.xlsx');\r\n\t\t//console.log(workbook);\r\n\t\tvar arr = [];\r\n\t\tvar data = null;\r\n\t\tvar url = 'http://localhost:3001/json'\r\n\t\tfetch(url).then(function(response) {\r\n\t\t    return response.json();\r\n\t\t})\r\n        .then(function(myJson) {\r\n            data = myJson;\r\n            data.forEach(function (info){\r\n                console.log(this);\r\n                console.log(info);\r\n                var thisButton = <Button style={{backgroundColor:\"#8d6e63\", color: '#faebd7', fontWeight: 'bold'}} variant='contained' size='large'>{info.Name}</Button>;\r\n                arr.push(thisButton);\r\n\t\t\t\t    })\r\n                \r\n})\r\n\tconsole.log(arr);\r\n\t\treturn await arr;\r\n\t\t}\r\n\r\n\t\trender() {\r\n\t\t    console.log(this.state.buttArr);\r\n\t\t    var disp = this.state.buttArr.map(button => <div style={{ padding: 5}}> {button} </div>)\r\n\t\t    console.log(disp);\r\n\t\t    return (\r\n                <div style={{ padding: 20 }}>\r\n\t\t\t   <Grid container>\r\n               <div style={{ padding: 5 }}>\r\n\t\t\t\t {disp}\r\n               </div>\r\n\t\t\t   </Grid>\r\n\t\t\t </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ClothingButtons;"]},"metadata":{},"sourceType":"module"}