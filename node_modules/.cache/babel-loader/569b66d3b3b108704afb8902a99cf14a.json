{"ast":null,"code":"var express = require('express');\n\nvar next = require('next');\n\nvar dev = process.env.NODE_ENV !== 'production'; // Create the Express-Next App\n\nvar app = next({\n  dev: dev\n});\nvar handle = app.getRequestHandler();\nif (typeof require !== 'undefined') XLSX = require('xlsx');\nvar workbook = XLSX.readFile('./SampleInventory.xlsx'); //console.log(workbook);\n\nvar worksheet = workbook.Sheets['Merchandise'];\nconsole.log(worksheet); //var path = require('./SampleInventory.xlsx');\n//console.log(path);\n//var workbook = XLSX.readFile('./SampleInventory.xlsx');\n//console.log(workbook);\n//Start the app\n\napp.prepare() //Start Express server and serve the \n.then(function () {\n  var server = express();\n  server.get('*', function (req, res) {\n    return handle(req, res);\n  });\n  server.listen(3001, function (err) {\n    if (err) throw err;\n    console.log('> Ready on http://localhost:3001');\n  });\n}).catch(function (ex) {\n  console.error(ex.stack);\n  process.exit(1);\n});","map":{"version":3,"sources":["C:\\cs_projects\\SCBC_SnackShackServer\\server.js"],"names":["express","require","next","dev","process","env","NODE_ENV","app","handle","getRequestHandler","XLSX","workbook","readFile","worksheet","Sheets","console","log","prepare","then","server","get","req","res","listen","err","catch","ex","error","stack","exit"],"mappings":"AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAArC,C,CACA;;AACA,IAAMC,GAAG,GAAGL,IAAI,CAAC;AAAEC,EAAAA,GAAG,EAAHA;AAAF,CAAD,CAAhB;AACA,IAAMK,MAAM,GAAGD,GAAG,CAACE,iBAAJ,EAAf;AAEA,IAAG,OAAOR,OAAP,KAAmB,WAAtB,EAAmCS,IAAI,GAAGT,OAAO,CAAC,MAAD,CAAd;AACnC,IAAIU,QAAQ,GAAGD,IAAI,CAACE,QAAL,CAAc,wBAAd,CAAf,C,CACA;;AACA,IAAIC,SAAS,GAAGF,QAAQ,CAACG,MAAT,CAAgB,aAAhB,CAAhB;AACAC,OAAO,CAACC,GAAR,CAAYH,SAAZ,E,CAEA;AACA;AACA;AACA;AAEA;;AACAN,GAAG,CAACU,OAAJ,GACA;AADA,CAECC,IAFD,CAEM,YAAM;AACR,MAAMC,MAAM,GAAGnB,OAAO,EAAtB;AACAmB,EAAAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1B,WAAOd,MAAM,CAACa,GAAD,EAAMC,GAAN,CAAb;AACH,GAFD;AAGAH,EAAAA,MAAM,CAACI,MAAP,CAAc,IAAd,EAAoB,UAACC,GAAD,EAAS;AACzB,QAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTT,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACH,GAHD;AAIH,CAXD,EAYCS,KAZD,CAYO,UAACC,EAAD,EAAQ;AACXX,EAAAA,OAAO,CAACY,KAAR,CAAcD,EAAE,CAACE,KAAjB;AACAxB,EAAAA,OAAO,CAACyB,IAAR,CAAa,CAAb;AACH,CAfD","sourcesContent":["const express = require('express')\r\nconst next = require('next')\r\nconst dev = process.env.NODE_ENV !== 'production'\r\n// Create the Express-Next App\r\nconst app = next({ dev })\r\nconst handle = app.getRequestHandler()\r\n\r\nif(typeof require !== 'undefined') XLSX = require('xlsx');\r\nvar workbook = XLSX.readFile('./SampleInventory.xlsx');\r\n//console.log(workbook);\r\nvar worksheet = workbook.Sheets['Merchandise'];\r\nconsole.log(worksheet);\r\n\r\n//var path = require('./SampleInventory.xlsx');\r\n//console.log(path);\r\n//var workbook = XLSX.readFile('./SampleInventory.xlsx');\r\n//console.log(workbook);\r\n\r\n//Start the app\r\napp.prepare()\r\n//Start Express server and serve the \r\n.then(() => {\r\n    const server = express()\r\n    server.get('*', (req, res) => {\r\n        return handle(req, res)\r\n    })\r\n    server.listen(3001, (err) => {\r\n        if (err) throw err\r\n        console.log('> Ready on http://localhost:3001')\r\n    })\r\n})\r\n.catch((ex) => {\r\n    console.error(ex.stack)\r\n    process.exit(1)\r\n})"]},"metadata":{},"sourceType":"module"}