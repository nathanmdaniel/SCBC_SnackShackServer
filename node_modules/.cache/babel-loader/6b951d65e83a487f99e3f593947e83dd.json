{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment'; // const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: '100%',\n//     maxWidth: 360,\n//     backgroundColor: theme.palette.background.paper,\n//   },\n// }));\n\nvar theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#E90C3E\"\n    },\n    secondary: {\n      main: \"#FAEBD7\"\n    }\n  }\n});\nexport default function EnvelopeList() {\n  //   const classes = theme;\n  var _React$useState = React.useState([0]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var handleToggle = function handleToggle(value) {\n    return function () {\n      var currentIndex = checked.indexOf(value);\n\n      var newChecked = _toConsumableArray(checked);\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      setChecked(newChecked);\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n    theme: theme\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes\n  }, [0, 1, 2, 3].map(function (value) {\n    var labelId = \"checkbox-list-label-\".concat(value);\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: value,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggle(value)\n    }, /*#__PURE__*/React.createElement(ListItemIcon, null, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      color: \"primary\"\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: \"Line item \".concat(value + 1)\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, null, /*#__PURE__*/React.createElement(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\"\n    }, /*#__PURE__*/React.createElement(CommentIcon, null))));\n  })));\n}","map":{"version":3,"sources":["C:/cs_projects/SCBC_SS2020/SCBC_SnackShackServer/pages/CheckOut/EnvelopeList.js"],"names":["React","makeStyles","MuiThemeProvider","createMuiTheme","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","CommentIcon","theme","palette","primary","main","secondary","EnvelopeList","useState","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","classes","map","labelId","undefined"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,0BAAjD;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,KAAK,GAAGT,cAAc,CAAC;AACzBU,EAAAA,OAAO,EAAE;AACXC,IAAAA,OAAO,EAAE;AACRC,MAAAA,IAAI,EAAE;AADE,KADE;AAIXC,IAAAA,SAAS,EAAE;AACVD,MAAAA,IAAI,EAAE;AADI;AAJA;AADgB,CAAD,CAA5B;AAWA,eAAe,SAASE,YAAT,GAAwB;AACvC;AADuC,wBAEPjB,KAAK,CAACkB,QAAN,CAAe,CAAC,CAAD,CAAf,CAFO;AAAA;AAAA,MAE9BC,OAF8B;AAAA,MAErBC,UAFqB;;AAIrC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD;AAAA,WAAW,YAAM;AACpC,UAAMC,YAAY,GAAGJ,OAAO,CAACK,OAAR,CAAgBF,KAAhB,CAArB;;AACA,UAAMG,UAAU,sBAAON,OAAP,CAAhB;;AAEA,UAAII,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBE,QAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AACD,OAFD,MAEO;AACLG,QAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACD;;AAEDH,MAAAA,UAAU,CAACK,UAAD,CAAV;AACD,KAXoB;AAAA,GAArB;;AAaA,sBACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEb;AAAzB,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEgB;AAAjB,KACC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAaC,GAAb,CAAiB,UAACP,KAAD,EAAW;AACzB,QAAMQ,OAAO,iCAA0BR,KAA1B,CAAb;AAEA,wBACA,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAsB,MAAA,IAAI,EAAES,SAA5B;AAAuC,MAAA,KAAK,MAA5C;AAA6C,MAAA,MAAM,MAAnD;AAAoD,MAAA,OAAO,EAAEV,YAAY,CAACC,KAAD;AAAzE,oBACI,oBAAC,YAAD,qBACA,oBAAC,QAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,OAAO,EAAEH,OAAO,CAACK,OAAR,CAAgBF,KAAhB,MAA2B,CAAC,CAFzC;AAGI,MAAA,QAAQ,EAAE,CAAC,CAHf;AAII,MAAA,aAAa,MAJjB;AAKI,MAAA,UAAU,EAAE;AAAE,2BAAmBQ;AAArB,OALhB;AAMI,MAAA,KAAK,EAAC;AANV,MADA,CADJ,eAWI,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAEA,OAAlB;AAA2B,MAAA,OAAO,sBAAeR,KAAK,GAAG,CAAvB;AAAlC,MAXJ,eAYI,oBAAC,uBAAD,qBACA,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,KAAjB;AAAuB,oBAAW;AAAlC,oBACI,oBAAC,WAAD,OADJ,CADA,CAZJ,CADA;AAoBH,GAvBA,CADD,CADF,CADJ;AA8BD","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     width: '100%',\r\n//     maxWidth: 360,\r\n//     backgroundColor: theme.palette.background.paper,\r\n//   },\r\n// }));\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n\t\tprimary: {\r\n\t\t\tmain: \"#E90C3E\"\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: \"#FAEBD7\"\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport default function EnvelopeList() {\r\n//   const classes = theme;\r\n  const [checked, setChecked] = React.useState([0]);\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <List className={classes}>\r\n        {[0, 1, 2, 3].map((value) => {\r\n            const labelId = `checkbox-list-label-${value}`;\r\n\r\n            return (\r\n            <ListItem key={value} role={undefined} dense button onClick={handleToggle(value)}>\r\n                <ListItemIcon>\r\n                <Checkbox\r\n                    edge=\"start\"\r\n                    checked={checked.indexOf(value) !== -1}\r\n                    tabIndex={-1}\r\n                    disableRipple\r\n                    inputProps={{ 'aria-labelledby': labelId }}\r\n                    color='primary'\r\n                />\r\n                </ListItemIcon>\r\n                <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\r\n                <ListItemSecondaryAction>\r\n                <IconButton edge=\"end\" aria-label=\"comments\">\r\n                    <CommentIcon />\r\n                </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n            );\r\n        })}\r\n        </List>\r\n    </MuiThemeProvider>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}