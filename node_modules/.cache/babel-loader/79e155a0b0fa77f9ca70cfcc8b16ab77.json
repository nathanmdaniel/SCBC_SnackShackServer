{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport ExistingAccountLookup from './ExistingAccountLookup.js';\nimport ExistingAccountDeposit from './ExistingAccountDeposit.js';\nimport AutocompleteNames from './AutocompleteNames.js';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nvar ExistingAccountInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ExistingAccountInput, _React$Component);\n\n  function ExistingAccountInput() {\n    var _this;\n\n    _classCallCheck(this, ExistingAccountInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExistingAccountInput).call(this));\n    _this.getNames = _this.getNames.bind(_assertThisInitialized(_this));\n    _this.setCurName = _this.setCurName.bind(_assertThisInitialized(_this));\n    _this.setAddAmount = _this.setAddAmount.bind(_assertThisInitialized(_this));\n    _this.updateExistingAccount = _this.updateExistingAccount.bind(_assertThisInitialized(_this));\n    _this.state = {\n      accountJson: null,\n      names: [],\n      curName: \"placeholder\",\n      addAmount: 0\n    };\n    return _this;\n  }\n\n  _createClass(ExistingAccountInput, [{\n    key: \"setCurName\",\n    value: function setCurName(newName) {\n      this.setState({\n        curName: newName\n      });\n    }\n  }, {\n    key: \"setAddAmount\",\n    value: function setAddAmount(newAmount) {\n      this.setState({\n        addAmount: newAmount\n      });\n    }\n  }, {\n    key: \"getNames\",\n    value: function getNames() {\n      return this.state.names;\n    }\n  }, {\n    key: \"updateExistingAccount\",\n    value: function updateExistingAccount() {\n      console.log(this.state.curName, this.state.addAmount);\n      fetch('http://localhost:3001/CreditAccount', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          name: this.state.curName,\n          amount: this.state.addAmount\n        })\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.setState({\n        name: \"placeholder\",\n        balance: 0\n      });\n      document.getElementById(\"depositInput\").value = \"\";\n      document.getElementById(\"newNameInput\").value = \"\";\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var url = 'http://localhost:3001/RecordsJson';\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (myJson) {\n        var ret = [];\n        myJson.forEach(function (info) {\n          ret.push(info.Name);\n        });\n\n        _this2.setState({\n          accountJson: myJson,\n          names: ret\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\"\n      }, \"Existing Account Update\"), React.createElement(Grid, {\n        container: true,\n        spacing: 8\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 8,\n        xs: 12\n      }, React.createElement(AutocompleteNames, {\n        setCamperName: this.setCurName,\n        getNames: this.getNames\n      })), React.createElement(Grid, {\n        item: true,\n        sm: 1,\n        xs: false\n      }), React.createElement(Grid, {\n        item: true,\n        sm: 3,\n        xs: 4\n      }, React.createElement(ExistingAccountDeposit, {\n        setAmount: this.setAddAmount\n      })), React.createElement(Grid, {\n        item: true,\n        sm: 9,\n        xs: 3\n      }), React.createElement(Grid, {\n        item: true,\n        sm: 3,\n        xs: 4\n      }, React.createElement(Button, {\n        fullWidth: true,\n        onClick: this.updateExistingAccount,\n        style: {\n          backgroundColor: '#c5e1a5',\n          color: '#558b2f'\n        }\n      }, React.createElement(SvgIcon, null, React.createElement(\"path\", {\n        d: \"M15.54,3.5L20.5,8.47L19.07,9.88L14.12,4.93L15.54,3.5M3.5,19.78L10,13.31C9.9,13 9.97,12.61 10.23,12.35C10.62,11.96 11.26,11.96 11.65,12.35C12.04,12.75 12.04,13.38 11.65,13.77C11.39,14.03 11,14.1 10.69,14L4.22,20.5L14.83,16.95L18.36,10.59L13.42,5.64L7.05,9.17L3.5,19.78Z\"\n      }))))));\n    }\n  }]);\n\n  return ExistingAccountInput;\n}(React.Component);\n\nexport default ExistingAccountInput;","map":{"version":3,"sources":["C:\\cs_projects\\SCBC_SnackShackServer\\pages\\Accounts\\ExistingAccountInput.js"],"names":["React","Typography","ExistingAccountLookup","ExistingAccountDeposit","AutocompleteNames","Grid","Button","SvgIcon","ExistingAccountInput","getNames","bind","setCurName","setAddAmount","updateExistingAccount","state","accountJson","names","curName","addAmount","newName","setState","newAmount","console","log","fetch","method","headers","body","name","amount","catch","error","balance","document","getElementById","value","url","then","response","json","myJson","ret","forEach","info","push","Name","backgroundColor","color","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExistingAccountLookup from './ExistingAccountLookup.js';\r\nimport ExistingAccountDeposit from './ExistingAccountDeposit.js';\r\nimport AutocompleteNames from './AutocompleteNames.js';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nclass ExistingAccountInput extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.getNames = this.getNames.bind(this);\r\n        this.setCurName = this.setCurName.bind(this);\r\n        this.setAddAmount = this.setAddAmount.bind(this);        \r\n        this.updateExistingAccount = this.updateExistingAccount.bind(this);\r\n        this.state = {\r\n            accountJson: null,\r\n            names: [],\r\n            curName: \"placeholder\",\r\n            addAmount: 0\r\n        };   \r\n    }\r\n\r\n    setCurName(newName) {\r\n        this.setState({curName: newName});\r\n    }\r\n\r\n    setAddAmount(newAmount) {\r\n        this.setState({addAmount: newAmount});\r\n    }\r\n\r\n    getNames() {\r\n        return this.state.names;\r\n    }\r\n\r\n    updateExistingAccount() {\r\n        console.log(this.state.curName, this.state.addAmount);\r\n        fetch('http://localhost:3001/CreditAccount', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.curName,\r\n                amount: this.state.addAmount\r\n            })\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n        this.setState({\r\n            name: \"placeholder\",\r\n            balance: 0\r\n        });\r\n        document.getElementById(\"depositInput\").value = \"\";\r\n        document.getElementById(\"newNameInput\").value = \"\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        var url = 'http://localhost:3001/RecordsJson'\r\n        fetch(url).then(response => {\r\n            return response.json();\r\n        })\r\n        .then(myJson => {\r\n            var ret = [];\r\n            myJson.forEach(info =>{\r\n                ret.push(info.Name)\r\n            })\r\n            this.setState({accountJson: myJson, names: ret});\r\n        })\r\n        .catch((error) => {\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n\t\t\t    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n\t\t\t\t    Existing Account Update\r\n\t\t\t    </Typography>\r\n                <Grid container spacing={8}>\r\n                    <Grid item sm={8} xs={12}>\r\n                        <AutocompleteNames setCamperName={this.setCurName} getNames={this.getNames}/>\r\n                    </Grid>\r\n                    <Grid item sm={1} xs={false}/>\r\n                    <Grid item sm={3} xs={4}>\r\n                        <ExistingAccountDeposit setAmount={this.setAddAmount}/>\r\n                    </Grid>\r\n                    <Grid item sm={9} xs={3}/>\r\n                    <Grid item sm={3} xs={4}>\r\n                        <Button fullWidth onClick={this.updateExistingAccount} style={{backgroundColor:'#c5e1a5', color: '#558b2f'}}>\r\n\t\t\t\t\t\t    <SvgIcon>\r\n\t\t\t\t\t\t\t    <path d=\"M15.54,3.5L20.5,8.47L19.07,9.88L14.12,4.93L15.54,3.5M3.5,19.78L10,13.31C9.9,13 9.97,12.61 10.23,12.35C10.62,11.96 11.26,11.96 11.65,12.35C12.04,12.75 12.04,13.38 11.65,13.77C11.39,14.03 11,14.1 10.69,14L4.22,20.5L14.83,16.95L18.36,10.59L13.42,5.64L7.05,9.17L3.5,19.78Z\" />\r\n\t\t\t\t\t\t    </SvgIcon>\r\n\t\t\t\t\t    </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n\t\t);\r\n    }\r\n}\r\n\r\nexport default ExistingAccountInput;"]},"metadata":{},"sourceType":"module"}