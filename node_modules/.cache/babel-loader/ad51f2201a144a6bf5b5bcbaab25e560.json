{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nvar NewBalanceInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewBalanceInput, _React$Component);\n\n  function NewBalanceInput(props) {\n    var _this;\n\n    _classCallCheck(this, NewBalanceInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewBalanceInput).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      var userInput = _parseInt(e.currentTarget.value);\n\n      _this.props.setTotal(userInput);\n    });\n\n    _this.state = {\n      transactionNum: _this.props.transactionNum\n    };\n    return _this;\n  }\n\n  _createClass(NewBalanceInput, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      console.log(prevProps.transactionNum, this.props.transactionNum);\n\n      if (prevProps.transactionNum != this.props.transactionNum) {\n        this.setState({\n          transactionNum: this.props.transactionNum\n        });\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Input, {\n        id: \"newBalanceInput\",\n        placeholder: \"0.00\",\n        onChange: this.onChange,\n        startAdornment: React.createElement(InputAdornment, {\n          position: \"start\"\n        }, \"$\")\n      });\n    }\n  }]);\n\n  return NewBalanceInput;\n}(React.Component);\n\nexport default NewBalanceInput;","map":{"version":3,"sources":["C:\\cs_projects\\SCBC_SnackShackServer\\pages\\Accounts\\NewBalanceInput.js"],"names":["React","Input","InputAdornment","NewBalanceInput","props","e","userInput","currentTarget","value","setTotal","state","transactionNum","prevProps","console","log","setState","forceUpdate","onChange","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;IAEMC,e;;;;;AACF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;;AADe,+DAMR,UAAAC,CAAC,EAAI;AACZ,UAAMC,SAAS,GAAG,UAASD,CAAC,CAACE,aAAF,CAAgBC,KAAzB,CAAlB;;AAEA,YAAKJ,KAAL,CAAWK,QAAX,CAAoBH,SAApB;AACH,KAVkB;;AAEf,UAAKI,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,MAAKP,KAAL,CAAWO;AADlB,KAAb;AAFe;AAKlB;;;;uCAOkBC,S,EAAW;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACD,cAAtB,EAAsC,KAAKP,KAAL,CAAWO,cAAjD;;AACA,UAAIC,SAAS,CAACD,cAAV,IAA4B,KAAKP,KAAL,CAAWO,cAA3C,EAA2D;AACvD,aAAKI,QAAL,CAAc;AAACJ,UAAAA,cAAc,EAAE,KAAKP,KAAL,CAAWO;AAA5B,SAAd;AACA,aAAKK,WAAL;AACH;AACJ;;;6BAEQ;AACL,aACI,oBAAC,KAAD;AACA,QAAA,EAAE,EAAC,iBADH;AAEA,QAAA,WAAW,EAAC,MAFZ;AAGI,QAAA,QAAQ,EAAE,KAAKC,QAHnB;AAII,QAAA,cAAc,EAAE,oBAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC;AAAzB;AAJpB,QADJ;AAQP;;;;EA9B6BjB,KAAK,CAACkB,S;;AAiCpC,eAAef,eAAf","sourcesContent":["import React from 'react';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nclass NewBalanceInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            transactionNum: this.props.transactionNum\r\n        }\r\n    }\r\n    onChange = e => {\r\n        const userInput = parseInt(e.currentTarget.value);\r\n\r\n        this.props.setTotal(userInput);\r\n    };\r\n       \r\n    componentDidUpdate(prevProps) {\r\n        console.log(prevProps.transactionNum, this.props.transactionNum)\r\n        if (prevProps.transactionNum != this.props.transactionNum) {\r\n            this.setState({transactionNum: this.props.transactionNum});\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Input\r\n            id=\"newBalanceInput\"\r\n            placeholder=\"0.00\"\r\n                onChange={this.onChange}\r\n                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n            />\r\n        );\r\n}\r\n}\r\n\r\nexport default NewBalanceInput;"]},"metadata":{},"sourceType":"module"}