{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport XLSX from 'xlsx';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nvar FrozenButtons =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FrozenButtons, _React$Component);\n\n  function FrozenButtons(props) {\n    var _this;\n\n    _classCallCheck(this, FrozenButtons);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FrozenButtons).call(this, props));\n    _this.genButtons = _this.genButtons.bind(_assertThisInitialized(_this));\n    _this.state = {\n      buttArr: _this.genButtons()\n    };\n    return _this;\n  }\n\n  _createClass(FrozenButtons, [{\n    key: \"genButtons\",\n    value: function genButtons() {\n      var XLSX = require('xlsx'); //var path = require('./SampleInventory.xlsx');\n      //console.log(path);\n      //var workbook = XLSX.readFile('./SampleInventory.xlsx');\n      //console.log(workbook);\n\n\n      var arr = [];\n\n      for (var i = 0; i < 10; ++i) {\n        arr.push(React.createElement(Button, {\n          style: {\n            backgroundColor: \"#42a5f5\",\n            color: '#faebd7'\n          },\n          variant: \"contained\",\n          size: \"large\",\n          onClick: this.props.addChip\n        }, \" Clothing\"));\n      }\n\n      return arr;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          padding: 20\n        }\n      }, React.createElement(Grid, {\n        container: true\n      }, this.state.buttArr.map(function (button) {\n        return React.createElement(\"div\", {\n          style: {\n            padding: 5\n          }\n        }, \" \", button, \" \");\n      })));\n    }\n  }]);\n\n  return FrozenButtons;\n}(React.Component);\n\nexport default FrozenButtons;","map":{"version":3,"sources":["C:\\cs_projects\\SCBC_SnackShackServer\\pages\\Register\\RegisterButtonSide\\CategorizedButtons\\FrozenButtons.js"],"names":["React","XLSX","Button","Grid","FrozenButtons","props","genButtons","bind","state","buttArr","require","arr","i","push","backgroundColor","color","addChip","padding","map","button","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;IAGUC,a;;;;;AAEF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,uFAAMA,KAAN;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,MAAKH,UAAL;AADA,KAAb;AAHe;AAMlB;;;;iCAEY;AACT,UAAML,IAAI,GAAGS,OAAO,CAAC,MAAD,CAApB,CADS,CAET;AACA;AACA;AACA;;;AACA,UAAIC,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwB,EAAEA,CAA1B;AACID,QAAAA,GAAG,CAACE,IAAJ,CAAS,oBAAC,MAAD;AACtB,UAAA,KAAK,EAAE;AAACC,YAAAA,eAAe,EAAE,SAAlB;AAA6BC,YAAAA,KAAK,EAAE;AAApC,WADe;AAErB,UAAA,OAAO,EAAC,WAFa;AAGrB,UAAA,IAAI,EAAC,OAHgB;AAIrB,UAAA,OAAO,EAAE,KAAKV,KAAL,CAAWW;AAJC,uBAAT;AADJ;;AAOR,aAAOL,GAAP;AACC;;;6BAEQ;AACL,aACL;AAAK,QAAA,KAAK,EAAE;AAAEM,UAAAA,OAAO,EAAE;AAAX;AAAZ,SACG,oBAAC,IAAD;AAAM,QAAA,SAAS;AAAf,SACA,KAAKT,KAAL,CAAWC,OAAX,CAAmBS,GAAnB,CAAuB,UAAAC,MAAM;AAAA,eAAI;AAAK,UAAA,KAAK,EAAE;AAAEF,YAAAA,OAAO,EAAE;AAAX;AAAZ,gBAA8BE,MAA9B,MAAJ;AAAA,OAA7B,CADA,CADH,CADK;AAOH;;;;EAnC2BnB,KAAK,CAACoB,S;;AAsCtC,eAAehB,aAAf","sourcesContent":["import React from 'react';\r\nimport XLSX from 'xlsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n    class FrozenButtons extends React.Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            this.genButtons = this.genButtons.bind(this);\r\n            this.state = {\r\n                buttArr: this.genButtons(),\r\n            };\r\n        }\r\n\r\n        genButtons() {\r\n            const XLSX = require('xlsx');\r\n            //var path = require('./SampleInventory.xlsx');\r\n            //console.log(path);\r\n            //var workbook = XLSX.readFile('./SampleInventory.xlsx');\r\n            //console.log(workbook);\r\n            var arr = [];\r\n            for (var i = 0; i < 10; ++i)\r\n                arr.push(<Button\r\n\t\t\tstyle={{backgroundColor: \"#42a5f5\", color: '#faebd7'}}\r\n    variant='contained'\r\n    size='large'\r\n    onClick={this.props.addChip}\r\n    > Clothing</Button>);\r\n    return arr;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\t\t\t<div style={{ padding: 20 }}>\r\n\t\t\t   <Grid container>\r\n\t\t\t\t {this.state.buttArr.map(button => <div style={{ padding: 5 }}> {button} </div>)}\r\n\t\t\t   </Grid>\r\n    </div>\r\n\t\t);\r\n    }\r\n    }\r\n\r\nexport default FrozenButtons;"]},"metadata":{},"sourceType":"module"}