{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport NewBalanceInput from './NewBalanceInput.js';\nimport NewNameInput from './NewNameInput.js';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nvar NewAccountInput = /*#__PURE__*/function (_React$Component) {\n  _inherits(NewAccountInput, _React$Component);\n\n  var _super = _createSuper(NewAccountInput);\n\n  function NewAccountInput() {\n    var _this;\n\n    _classCallCheck(this, NewAccountInput);\n\n    _this = _super.call(this);\n    _this.setName = _this.setName.bind(_assertThisInitialized(_this));\n    _this.setTotal = _this.setTotal.bind(_assertThisInitialized(_this));\n    _this.sendNewAccount = _this.sendNewAccount.bind(_assertThisInitialized(_this));\n    _this.state = {\n      name: \"placeholder\",\n      total: 0\n    };\n    return _this;\n  }\n\n  _createClass(NewAccountInput, [{\n    key: \"setName\",\n    value: function setName(inName) {\n      this.setState({\n        name: inName\n      });\n    }\n  }, {\n    key: \"setTotal\",\n    value: function setTotal(inTotal) {\n      this.setState({\n        total: inTotal\n      });\n    }\n  }, {\n    key: \"sendNewAccount\",\n    value: function sendNewAccount() {\n      if (this.state.name === \"placeholder\" || this.state.name === \"\") {\n        this.setState({\n          balance: 0\n        });\n        document.getElementById(\"newBalanceInput\").value = \"\";\n        return;\n      } // fetch('http://192.168.1.2:3001/NewAccount', {\n\n\n      fetch('http://localhost:3001/NewAccount', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          name: this.state.name,\n          balance: this.state.total\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (myJson) {\n        var outputString = \"Created account for \\\"\" + response.name + \"\\\" with balance $\" + response.balance + \"\\n\";\n        document.getElementById(\"server-output\").value += outputString;\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.setState({\n        name: \"placeholder\",\n        balance: 0\n      });\n      document.getElementById(\"newBalanceInput\").value = \"\";\n      document.getElementById(\"newNameInput\").value = \"\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\"\n      }, \"New Account Input\"), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 1\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 8,\n        xs: 12\n      }, /*#__PURE__*/React.createElement(NewNameInput, {\n        transactionNum: this.state.transactionNum,\n        setName: this.setName\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 1,\n        xs: false\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 3,\n        xs: 4\n      }, /*#__PURE__*/React.createElement(NewBalanceInput, {\n        transactionNum: this.state.transactionNum,\n        setTotal: this.setTotal\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 9,\n        xs: 3\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 3,\n        xs: 4\n      }, /*#__PURE__*/React.createElement(Button, {\n        fullWidth: true,\n        onClick: this.sendNewAccount,\n        style: {\n          backgroundColor: '#c5e1a5',\n          color: '#558b2f'\n        }\n      }, /*#__PURE__*/React.createElement(SvgIcon, null, /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M15.54,3.5L20.5,8.47L19.07,9.88L14.12,4.93L15.54,3.5M3.5,19.78L10,13.31C9.9,13 9.97,12.61 10.23,12.35C10.62,11.96 11.26,11.96 11.65,12.35C12.04,12.75 12.04,13.38 11.65,13.77C11.39,14.03 11,14.1 10.69,14L4.22,20.5L14.83,16.95L18.36,10.59L13.42,5.64L7.05,9.17L3.5,19.78Z\"\n      }))))));\n    }\n  }]);\n\n  return NewAccountInput;\n}(React.Component);\n\nexport default NewAccountInput;","map":{"version":3,"sources":["C:/cs_projects/SCBC_SS2020/SCBC_SnackShackServer/pages/Accounts/NewAccountInput.js"],"names":["React","NewBalanceInput","NewNameInput","Typography","Grid","Button","SvgIcon","NewAccountInput","setName","bind","setTotal","sendNewAccount","state","name","total","inName","setState","inTotal","balance","document","getElementById","value","fetch","method","headers","body","then","response","json","myJson","outputString","catch","error","console","log","transactionNum","backgroundColor","color","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;IAEMC,e;;;;;AACF,6BAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,+BAAhB;AACA,UAAKE,cAAL,GAAsB,MAAKA,cAAL,CAAoBF,IAApB,+BAAtB;AACA,UAAKG,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,aADG;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AALU;AASb;;;;4BAEOC,M,EAAQ;AACZ,WAAKC,QAAL,CAAc;AAACH,QAAAA,IAAI,EAAEE;AAAP,OAAd;AACH;;;6BAEQE,O,EAAS;AACd,WAAKD,QAAL,CAAc;AAACF,QAAAA,KAAK,EAAEG;AAAR,OAAd;AACH;;;qCAEgB;AACb,UAAG,KAAKL,KAAL,CAAWC,IAAX,KAAoB,aAApB,IAAqC,KAAKD,KAAL,CAAWC,IAAX,KAAoB,EAA5D,EAAgE;AAC5D,aAAKG,QAAL,CAAc;AACVE,UAAAA,OAAO,EAAE;AADC,SAAd;AAGAC,QAAAA,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CC,KAA3C,GAAmD,EAAnD;AACA;AACH,OAPY,CAQb;;;AACAC,MAAAA,KAAK,CAAC,kCAAD,EAAqC;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF6B;AAKtCC,QAAAA,IAAI,EAAE,gBAAe;AACjBZ,UAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADA;AAEjBK,UAAAA,OAAO,EAAE,KAAKN,KAAL,CAAWE;AAFH,SAAf;AALgC,OAArC,CAAL,CASGY,IATH,CASQ,UAAAC,QAAQ,EAAI;AAChB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAXD,EAYCF,IAZD,CAYM,UAAAG,MAAM,EAAI;AACZ,YAAIC,YAAY,GAAG,2BAA2BH,QAAQ,CAACd,IAApC,GAA2C,mBAA3C,GAAiEc,QAAQ,CAACT,OAA1E,GAAoF,IAAvG;AACAC,QAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,IAAkDS,YAAlD;AACH,OAfD,EAeGC,KAfH,CAeS,UAACC,KAAD,EAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAjBD;AAkBA,WAAKhB,QAAL,CAAc;AACVH,QAAAA,IAAI,EAAE,aADI;AAEVK,QAAAA,OAAO,EAAE;AAFC,OAAd;AAIAC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CC,KAA3C,GAAmD,EAAnD;AACAF,MAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,KAAxC,GAAgD,EAAhD;AACH;;;6BAEQ;AACL,0BACI,8CACL,oBAAC,UAAD;AAAY,QAAA,YAAY,MAAxB;AAAyB,QAAA,OAAO,EAAC,IAAjC;AAAsC,QAAA,SAAS,EAAC;AAAhD,6BADK,eAII,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE;AAAzB,sBACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE;AAAtB,sBACI,oBAAC,YAAD;AAAc,QAAA,cAAc,EAAE,KAAKT,KAAL,CAAWuB,cAAzC;AAAyD,QAAA,OAAO,EAAE,KAAK3B;AAAvE,QADJ,CADJ,eAII,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE;AAAtB,QAJJ,eAKI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE;AAAtB,sBACR,oBAAC,eAAD;AAAiB,QAAA,cAAc,EAAE,KAAKI,KAAL,CAAWuB,cAA5C;AAA4D,QAAA,QAAQ,EAAE,KAAKzB;AAA3E,QADQ,CALJ,eAQI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE;AAAtB,QARJ,eASI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE;AAAtB,sBACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,MAAjB;AAAkB,QAAA,OAAO,EAAE,KAAKC,cAAhC;AAAgD,QAAA,KAAK,EAAE;AAACyB,UAAAA,eAAe,EAAC,SAAjB;AAA4BC,UAAAA,KAAK,EAAE;AAAnC;AAAvD,sBACd,oBAAC,OAAD,qBACC;AAAM,QAAA,CAAC,EAAC;AAAR,QADD,CADc,CADJ,CATJ,CAJJ,CADJ;AAwBH;;;;EAhFyBrC,KAAK,CAACsC,S;;AAmFpC,eAAe/B,eAAf","sourcesContent":["import React from 'react';\r\nimport NewBalanceInput from './NewBalanceInput.js';\r\nimport NewNameInput from './NewNameInput.js';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nclass NewAccountInput extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.setName = this.setName.bind(this);\r\n        this.setTotal = this.setTotal.bind(this);\r\n        this.sendNewAccount = this.sendNewAccount.bind(this);\r\n        this.state = {\r\n            name: \"placeholder\",\r\n            total: 0\r\n        };\r\n    }\r\n\r\n    setName(inName) {\r\n        this.setState({name: inName});\r\n    }\r\n\r\n    setTotal(inTotal) {\r\n        this.setState({total: inTotal});\r\n    }\r\n\r\n    sendNewAccount() {\r\n        if(this.state.name === \"placeholder\" || this.state.name === \"\") {\r\n            this.setState({\r\n                balance: 0\r\n            });\r\n            document.getElementById(\"newBalanceInput\").value = \"\";\r\n            return;\r\n        }\r\n        // fetch('http://192.168.1.2:3001/NewAccount', {\r\n        fetch('http://localhost:3001/NewAccount', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                balance: this.state.total\r\n            })\r\n        }).then(response => {\r\n            return response.json();\r\n        })\r\n        .then(myJson => {\r\n            var outputString = \"Created account for \\\"\" + response.name + \"\\\" with balance $\" + response.balance + \"\\n\";\r\n            document.getElementById(\"server-output\").value += outputString;\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n        this.setState({\r\n            name: \"placeholder\",\r\n            balance: 0\r\n        });\r\n        document.getElementById(\"newBalanceInput\").value = \"\";\r\n        document.getElementById(\"newNameInput\").value = \"\";\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n\t\t\t    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n\t\t\t\t    New Account Input\r\n\t\t\t    </Typography>\r\n                <Grid container spacing={1}>\r\n                    <Grid item sm={8} xs={12}>\r\n                        <NewNameInput transactionNum={this.state.transactionNum} setName={this.setName}/>\r\n                    </Grid>\r\n                    <Grid item sm={1} xs={false}/>\r\n                    <Grid item sm={3} xs={4}>\r\n\t\t\t\t        <NewBalanceInput transactionNum={this.state.transactionNum} setTotal={this.setTotal}/>\r\n                    </Grid>\r\n                    <Grid item sm={9} xs={3}/>\r\n                    <Grid item sm={3} xs={4}>\r\n                        <Button fullWidth onClick={this.sendNewAccount} style={{backgroundColor:'#c5e1a5', color: '#558b2f'}}>\r\n\t\t\t\t\t\t    <SvgIcon>\r\n\t\t\t\t\t\t\t    <path d=\"M15.54,3.5L20.5,8.47L19.07,9.88L14.12,4.93L15.54,3.5M3.5,19.78L10,13.31C9.9,13 9.97,12.61 10.23,12.35C10.62,11.96 11.26,11.96 11.65,12.35C12.04,12.75 12.04,13.38 11.65,13.77C11.39,14.03 11,14.1 10.69,14L4.22,20.5L14.83,16.95L18.36,10.59L13.42,5.64L7.05,9.17L3.5,19.78Z\" />\r\n\t\t\t\t\t\t    </SvgIcon>\r\n\t\t\t\t\t    </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n\t\t);\r\n    }\r\n}\r\n\r\nexport default NewAccountInput;"]},"metadata":{},"sourceType":"module"}