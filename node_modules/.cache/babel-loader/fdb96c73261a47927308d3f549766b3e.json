{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from './RegisterButtonSide/Tabs.js';\nimport TransactionCard from './RegisterTransactionSide/TransactionCard.js';\nimport RegisterButtonContainer from './RegisterButtonSide/RegisterButtonContainer.js';\nimport CheckoutChip from './CheckoutChip.js';\nimport Chip from '@material-ui/core/Chip';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      margin: \"10px\"\n    }\n  };\n};\n\nfunction handleChipClick() {\n  console.log(\"chip clicked\");\n}\n\nfunction genChipLabel(itemName, price) {\n  return itemName + \"  $\" + price.toFixed(2);\n}\n\nvar Register =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  function Register() {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      chips: [],\n      prices: [],\n      items: [],\n      total: 0,\n      transactionNum: 0\n    });\n\n    _this.handleButtonClick = _this.handleButtonClick.bind(_assertThisInitialized(_this));\n    _this.handleRemoveClick = _this.handleRemoveClick.bind(_assertThisInitialized(_this));\n    _this.handleSendClick = _this.handleSendClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"handleButtonClick\",\n    value: function handleButtonClick(itemName, sourceSheet, price) {\n      this.state.chips.push(\n      /*<Chip\r\n          label={genChipLabel(itemName, price)}\r\n      onClick={handleChipClick}\r\n          style={{color: '#283593', width: '100%', fontWeight: 'bold', margin: 1}}\r\n      />);*/\n      React.createElement(CheckoutChip, {\n        label: genChipLabel(itemName, price),\n        onClick: handleChipClick\n      }));\n      this.state.items.push({\n        sheet: sourceSheet,\n        item: itemName\n      });\n      this.state.prices.push(price);\n      this.state.total = this.state.total + price;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleRemoveClick\",\n    value: function handleRemoveClick() {\n      this.state.chips.pop();\n      this.state.items.pop();\n      this.state.total -= this.state.prices.pop();\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleSendClick\",\n    value: function handleSendClick(customerName) {\n      fetch('http://localhost:3001/DecInventories', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          name: customerName,\n          price: this.state.total,\n          items: this.state.items\n        })\n      }).catch(function (error) {\n        console.log(error);\n      }); //request({\n      //    url: url,\n      //    method: \"POST\",\n      //    json: true,   // <--Very important!!!\n      //    body: myJSONObject\n      //}, function (error, response, body){\n      //    console.log(response);\n      //});\n\n      this.state.chips = [];\n      this.state.prices = [];\n      this.state.items = [];\n      this.state.total = 0;\n      this.state.transactionNum++;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: classes.root\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 8\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8\n      }, React.createElement(RegisterButtonContainer, {\n        addChip: this.handleButtonClick\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4\n      }, React.createElement(TransactionCard, {\n        chips: this.state.chips,\n        removeClick: this.handleRemoveClick,\n        sendClick: this.handleSendClick,\n        transactionTotal: this.state.total,\n        transactionNum: this.state.transactionNum\n      }))));\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nRegister.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Register);","map":{"version":3,"sources":["C:\\cs_projects\\SCBC_SnackShackServer\\pages\\Register\\Register.js"],"names":["React","PropTypes","withStyles","Paper","Card","Grid","Tabs","TransactionCard","RegisterButtonContainer","CheckoutChip","Chip","styles","theme","root","flexGrow","paper","padding","spacing","unit","textAlign","color","palette","text","secondary","margin","handleChipClick","console","log","genChipLabel","itemName","price","toFixed","Register","chips","prices","items","total","transactionNum","handleButtonClick","bind","handleRemoveClick","handleSendClick","sourceSheet","state","push","sheet","item","forceUpdate","pop","customerName","fetch","method","headers","body","name","catch","error","classes","props","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tabs from './RegisterButtonSide/Tabs.js';\r\nimport TransactionCard from './RegisterTransactionSide/TransactionCard.js'\r\nimport RegisterButtonContainer from './RegisterButtonSide/RegisterButtonContainer.js';\r\nimport CheckoutChip from './CheckoutChip.js';\r\n\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing.unit * 2,\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: \"10px\",\r\n    },\r\n});\r\n\r\nfunction handleChipClick() {\r\n    console.log(\"chip clicked\");\r\n}\r\n\r\nfunction genChipLabel(itemName, price) {\r\n    return itemName + \"  $\" + price.toFixed(2);\r\n}\r\n\r\n\r\nclass Register extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n        this.handleRemoveClick = this.handleRemoveClick.bind(this);\r\n        this.handleSendClick = this.handleSendClick.bind(this);\r\n    }\r\n\r\n    state = {\r\n        chips: [],\r\n        prices: [],\r\n        items: [],\r\n        total: 0,\r\n        transactionNum: 0,\r\n    };\r\n\r\n    handleButtonClick(itemName, sourceSheet, price) {\r\n        this.state.chips.push(\r\n        /*<Chip\r\n            label={genChipLabel(itemName, price)}\r\n\t\t\tonClick={handleChipClick}\r\n            style={{color: '#283593', width: '100%', fontWeight: 'bold', margin: 1}}\r\n        />);*/\r\n        <CheckoutChip\r\n            label={genChipLabel(itemName, price)}\r\n            onClick={handleChipClick}\r\n        />);\r\n        this.state.items.push({sheet: sourceSheet, item: itemName});\r\n        this.state.prices.push(price);\r\n        this.state.total = this.state.total + price;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    handleRemoveClick() {\r\n\r\n        this.state.chips.pop();\r\n        this.state.items.pop();\r\n        this.state.total -= this.state.prices.pop();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    handleSendClick(customerName) {\r\n        fetch('http://localhost:3001/DecInventories', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: customerName,\r\n                price: this.state.total,\r\n                items: this.state.items\r\n            })\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n        //request({\r\n        //    url: url,\r\n        //    method: \"POST\",\r\n        //    json: true,   // <--Very important!!!\r\n        //    body: myJSONObject\r\n        //}, function (error, response, body){\r\n        //    console.log(response);\r\n        //});\r\n\r\n        this.state.chips = [];\r\n        this.state.prices = [];\r\n        this.state.items = [];\r\n        this.state.total = 0;\r\n        this.state.transactionNum++;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n          <div className={classes.root}>\r\n            <Grid container spacing={8}>\r\n              <Grid item xs={12} sm={8}>\r\n                    <RegisterButtonContainer addChip={this.handleButtonClick}/>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TransactionCard \r\n                  chips={this.state.chips} \r\n                  removeClick={this.handleRemoveClick}\r\n                  sendClick={this.handleSendClick}\r\n                  transactionTotal={this.state.total}\r\n                  transactionNum={this.state.transactionNum}\r\n                  > \r\n                </TransactionCard>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        );\r\n            }\r\n}\r\n\r\n  Register.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Register);"]},"metadata":{},"sourceType":"module"}